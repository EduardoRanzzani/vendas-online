// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model User {
    id        Int       @id @default(autoincrement())
    name      String
    email     String    @unique
    phone     String
    cpf       String    @unique
    password  String
    typeUser  Int       @default(1) @map("type_user")
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    addresses Address[]
    Cart      Cart[]

    @@map("tb_user")
}

model State {
    id        Int       @id @default(autoincrement())
    name      String
    uf        String
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    cities City[]

    @@map("tb_state")
}

model City {
    id        Int       @id @default(autoincrement())
    name      String
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    state     State     @relation(fields: [stateId], references: [id])
    stateId   Int       @map("state_id")
    addresses Address[]

    @@map("tb_city")
}

model Address {
    id            Int       @id @default(autoincrement())
    street        String
    complement    String?
    numberAddress Int       @map("number")
    cep           String
    createdAt     DateTime  @default(now()) @map("created_at")
    updatedAt     DateTime? @updatedAt @map("updated_at")

    user   User @relation(fields: [userId], references: [id])
    userId Int  @map("user_id")

    city   City @relation(fields: [cityId], references: [id])
    cityId Int  @map("city_id")

    @@map("tb_address")
}

model Category {
    id        Int       @id @default(autoincrement())
    name      String    @unique
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    products Product[]

    @@map("tb_category")
}

model Product {
    id         Int       @id @default(autoincrement())
    name       String    @unique
    price      Float
    image      String
    categoryId Int       @map("category_id")
    createdAt  DateTime  @default(now()) @map("created_at")
    updatedAt  DateTime? @updatedAt @map("updated_at")

    category    Category       @relation(fields: [categoryId], references: [id])
    CartProduct CartProducts[]

    @@map("tb_product")
}

model Cart {
    id        Int       @id @default(autoincrement())
    userId    Int       @map("user_id")
    active    Boolean   @default(true)
    createdAt DateTime  @default(now()) @map("created_at")
    updatedAt DateTime? @updatedAt @map("updated_at")

    user User @relation(fields: [userId], references: [id])

    CartProduct CartProducts[]

    @@map("tb_cart")
}

model CartProducts {
    id        Int @id @default(autoincrement())
    cartId    Int @map("cart_id")
    productId Int @map("product_id")
    amount    Int

    cart    Cart    @relation(fields: [cartId], references: [id])
    product Product @relation(fields: [productId], references: [id])

    @@index([cartId, productId])
    @@map("tb_cart_product")
}
